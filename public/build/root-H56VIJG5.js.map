{
  "version": 3,
  "sources": ["../../src/app/components/NotificationSystem.tsx", "../../app/root.tsx"],
  "sourcesContent": ["import { observer } from 'mobx-react-lite';\nimport { useUIStore } from '../stores/StoreContext';\n\nexport const NotificationSystem = observer(() => {\n  const uiStore = useUIStore();\n\n  if (uiStore.notifications.length === 0) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-3\">\n      {uiStore.notifications.map(notification => (\n        <div\n          key={notification.id}\n          className={`notification p-4 max-w-sm transition-all duration-300 transform ${\n            notification.type === 'success' \n              ? 'border-neon-green shadow-neon-green-glow' \n              : notification.type === 'error' \n              ? 'border-neon-red shadow-neon-red-glow' \n              : 'border-neon-blue shadow-neon-blue-glow'\n          }`}\n        >\n          <div className=\"flex justify-between items-start\">\n            <div className=\"flex items-start space-x-3\">\n              <div className=\"text-2xl\">\n                {notification.type === 'success' ? '\u2705' : \n                 notification.type === 'error' ? '\u274C' : '\u2139\uFE0F'}\n              </div>\n              <p className=\"text-sm font-medium text-white\">\n                {notification.message}\n              </p>\n            </div>\n            <button\n              onClick={() => uiStore.removeNotification(notification.id)}\n              className=\"text-gray-400 hover:text-white transition-colors ml-4 text-lg\"\n              title=\"Cerrar notificaci\u00F3n\"\n            >\n              \u2715\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}); ", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\nimport { StoreProvider } from \"@/app/stores/StoreContext\";\nimport { NotificationSystem } from \"@/app/components/NotificationSystem\";\nimport stylesheet from \"@/app/globals.css\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: stylesheet\n}];\nexport default function App() {\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n        <title>Rick and Morty App</title>\n      </head>\n      <body>\n        <StoreProvider>\n          <Outlet />\n          <NotificationSystem />\n        </StoreProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>;\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
